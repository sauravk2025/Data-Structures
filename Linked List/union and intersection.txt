#include<stdio.h>
#include<stdlib.h>
int n1, n2;

struct node
{

  int data;
  struct node *next;

} *start1 = NULL, *start2 = NULL, *newnode, *start3 = NULL, *start4 = NULL;



void display (struct node *s)
{
  struct node *ptr;
  ptr = s;
  printf ("\n");
  while (ptr->next != NULL)
    {
      printf ("%d->", ptr->data);
      ptr = ptr->next;
    }
  printf ("%d", ptr->data);
}



void create(struct node *s)
{
  struct node *ptr;
  ptr = s;
  newnode = (struct node *) malloc (sizeof (struct node));
  newnode->next = NULL;
  printf ("Enter data:");
  scanf ("%d", &newnode->data);
  while (ptr->next != NULL)
    {
      ptr = ptr->next;

    }
  ptr->next = newnode;

}





void inter(struct node*s1,struct node*s2)
{
  struct node *ptr1;
  struct node *ptr2;
  struct node *ptr3;
  ptr1 = s1;
  ptr2 = s2;
  newnode = (struct node *) malloc (sizeof (struct node));
  newnode->next = NULL;


  while (ptr1 != NULL)
    {
      ptr2 = s2;
      while (ptr2 != NULL)
	{
	  if (ptr1->data == ptr2->data)
	    {
	      if (start3 == NULL)
		{
		  start3 = newnode;
		  newnode->data = ptr1->data;
		}
	      else
		{
		  ptr3 = start3;
		  while (ptr3->next != NULL)
		    {
		      ptr3 = ptr3->next;
		    }
		  newnode = (struct node *) malloc (sizeof (struct node));
		  newnode->next = NULL;
		  newnode->data = ptr1->data;
		  ptr3->next = newnode;

		}
	    }
	  ptr2 = ptr2->next;
	}
      ptr1 = ptr1->next;
    }
    printf("\nintersection:");
  display (start3);

}

void unio(struct node*s1,struct node*s2)
{
    int flag=0;
  struct node *ptr1;
  struct node *ptr2;
  struct node *ptr4;
  ptr1 = s1;
  ptr2 = s2;
  newnode = (struct node *) malloc (sizeof (struct node));
  newnode->next = NULL;


  while (ptr1 != NULL)
    {
      if (start4 == NULL)
	{
	  start4 = newnode;
	  newnode->data = ptr1->data;
	   ptr4 = start4;
	}
      else
	{
	 
	  newnode = (struct node *) malloc (sizeof (struct node));
	  newnode->next = NULL;
	  newnode->data = ptr1->data;
	  ptr4->next = newnode;
	  ptr4=ptr4->next;

	}
	
	ptr1=ptr1->next;
    }
    printf("\n1.union:");
    display(start4);
    
    ptr1=s1;
    ptr2=s2;
    
    while(ptr2!=NULL)
    {
        ptr1=s1;
        flag=0;
        while(ptr1!=NULL)
        {
         if(ptr1->data==ptr2->data)
            {
                flag=1;
                break;
            }
            else
            {
                 ptr1=ptr1->next;
                 
            }
           
        }
        
     if(flag==0)
      {  
     ptr4->data=ptr2->data;
     newnode = (struct node *) malloc (sizeof (struct node));
	 newnode->next = NULL;
	 ptr4->next = newnode;
	 ptr4=ptr4->next;
        
     }
    ptr2=ptr2->next;
    }

    printf("\n2.union:");
    display(start4);
    
    ptr4=start4;
    printf("\nFinal union:");
    while(ptr4->next!=NULL)
    {
        printf("%d->",ptr4->data);
        ptr4=ptr4->next;
    }
}




void main ()
{
  int i;
  printf ("Enter the number of elemnts in ll1:");
  scanf ("%d", &n1);
  newnode = (struct node *) malloc (sizeof (struct node));
  newnode->next = NULL;
  start1 = newnode;
  printf ("Enter data:");
  scanf ("%d", &newnode->data);
  for (i = 1; i < n1; i++)
    {
      create (start1);
    }
  display (start1);

  printf ("\nEnter the number of elemnts in ll2:");
  scanf ("%d", &n2);
  newnode = (struct node *) malloc (sizeof (struct node));
  newnode->next = NULL;
  start2 = newnode;
  printf ("Enter data:");
  scanf ("%d", &newnode->data);
  for (i = 1; i < n2; i++)
    {
      create(start2);
    }
  display(start2);

  inter(start1,start2);
  
  unio(start1,start2);


}
